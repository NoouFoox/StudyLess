@width: 100px;
@height: @width - 50px;

// 变量（Variables）
#header {
  width: @width;
  height: @height;
  background-color: rgba(118, 200, 174, 0.2);
  text-align: center;
  line-height: @height;
}

// 混合(Mixins)
.bordered {
  border-top: dotted 1px black;
  border-bottom: solid 2px black;
}

#menu a {
  color: #111;
  .bordered();
}

.post a {
  color: red;
  .bordered();
}

// 嵌套（Nesting）
// #header{
//   color: black;
// }
// #header .navigation{
//   font-size: 12px;
// }

// #header .logo{
//   width: 300px;
// }
// -> less:
#header {
  color: black;

  .navigation {
    font-size: 12px;
  }

  .logo {
    width: 300px;
  }
}

//可以将为选择器与混合一起使用
.clearfix {
  display: block;
  zoom: 1;

  //& 表示当前选择器的父级
  &:after {
    content: "";
    display: block;
    font-size: 0;
    height: 0;
    clear: both; //清楚浮动
    visibility: hidden; //消失但是会占用位置
  }


}

  // @规则嵌套和冒泡
.component{
  width: 300px;
  @media (min-width:768px){
    width: 600px;
    @media (min-resolution:192dpi){
      background-color: #fff;
    }
  }
  @media (min-width:1280px){
    width: 800px;
  }
}
// ->CSS
// .component {
//   width: 300px;
// }
// @media (min-width: 768px) {
//   .component {
//     width: 600px;
//   }
// }
// @media (min-width: 768px) and (min-resolution: 192dpi) {
//   .component {
//     background-color: #fff;
//   }
// }
// @media (min-width: 1280px) {
//   .component {
//     width: 800px;
//   }
// }

// 运算（Operations）
// calc() 特例 calc()不对对数学表达式计算 但是在嵌套函数中会计算变量和数学公式的值。 譬如：

@var: 50vh/2;
.a{
  width: calc(50+(@var - 20px));
}
